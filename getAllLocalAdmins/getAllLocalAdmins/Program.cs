using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Net.NetworkInformation;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Security.Principal;
using System.Net;


namespace getAllLocalAdmins
{
    class Program
    {

        static void Main(string[] args)
        {
            int octet1 = 10;
            int octet2 = 0;
            int octet3 = 0;
            int octet4 = 0;
            //String net = "/8";
            int upperLimit = 244;
            String currentIP;

            for (int i = 0; i <= upperLimit; ++i)
            {
                //increment octet
                octet3 = i;
                //create IP
                currentIP = octet1 + "." + octet2 + "." + octet3 + "." + octet4;

                //loop through subnet
                for (int j = 0; j <= upperLimit; ++j)
                {
                    //increment octet
                    octet4 = j;
                    //create IP
                    currentIP = octet1 + "." + octet2 + "." + octet3 + "." + octet4;
                    //ping IP
                    pingHost(currentIP);
                    //Console.WriteLine(currentIP);
                }
            }
            //pause console
            //Console.ReadLine();
            //pingHost("10.0.11.38");
            //Console.ReadLine();

        }
        //ping each host
        private static void pingHost(String target)
        {
            //try
            try
            {
                //if host string exists
                if (target.Length > 0)
                {
                    //ping host
                    Ping objping = new Ping();
                    PingReply objpingreply = objping.Send(target, 1000);
                    //if ping was successfull
                    if (objpingreply.Status == IPStatus.Success)
                    {
                        //print out that ping succeeded
                        //string pingable = System.String.Concat("\n" + host + " ,is alive\n");
                        string pingable = "\nPing " + objpingreply.Status.ToString() + " to " + target;
                        String fixme = pingable.TrimEnd('\r', '\n');
                        Console.WriteLine(fixme);
                        String hostname = getHostname(target);
                        Console.WriteLine("hostname:\t"+hostname.Trim());
                        getAdmins(target);
                    }
                    else
                    {
                        string pingable = "\nPing " + objpingreply.Status.ToString() + " to " + target;
                        String fixme = pingable.TrimEnd('\r', '\n');
                        Console.WriteLine(fixme);
                    }
                }
            }
            catch(Exception)
            {

            }
        }
        //private static void getAdmins(String host)
        //{
        //    //cmd string
        //    string strCmdText;
        //    //commands to run
        //    strCmdText = "PsExec.exe \\192.168.1.2 (net localgroup | net localgroup administrators)";
        //    //actually run the command
        //    System.Diagnostics.Process.Start("CMD.exe", strCmdText);
        //}
        private static void getAdmins(String host)
        {
            string build = "QUERY \\\\" + host + "\\HKEY_USERS";
            //string build = "PsExec.exe \\\\"+host+" -s (net localgroup | net localgroup administrators)"; ;
            string parms = @build;
            string output = "";
            string error = string.Empty;

            ProcessStartInfo psi = new ProcessStartInfo("reg.exe", parms);

            psi.RedirectStandardOutput = true;
            psi.RedirectStandardError = true;
            psi.WindowStyle = System.Diagnostics.ProcessWindowStyle.Normal;
            psi.UseShellExecute = false;
            System.Diagnostics.Process reg;
            reg = System.Diagnostics.Process.Start(psi);
            using (System.IO.StreamReader myOutput = reg.StandardOutput)
            {
                String stuff = myOutput.ReadToEnd();
                String replaceIt = stuff.Replace("HKEY_USERS\\", "");
                String replaceIt2 = replaceIt.Replace(".DEFAULT", "");
                String[] users = replaceIt2.Split(new String[] { "\n", "\r" }, StringSplitOptions.RemoveEmptyEntries);
                output = replaceIt2.Trim();
                foreach (String user in users)
                {
                    // convert the user sid to a domain\name
                    string account = new SecurityIdentifier(user).Translate(typeof(NTAccount)).ToString();
                    Console.WriteLine(account);
                   // Console.ReadLine();
                }
            }
            using (System.IO.StreamReader myError = reg.StandardError)
            {
                error = myError.ReadToEnd().Trim();

            }
            Console.WriteLine(output + "\n");
            Console.WriteLine(error + "\n");
            //Console.ReadLine();
        }
        private static String getHostname(String host)
        {
            string build = "QUERY \\\\" + host + "\\hklm\\SYSTEM\\CurrentControlSet\\Control\\ComputerName\\ComputerName /v ComputerName";
            //string build = "PsExec.exe \\\\"+host+" -s (net localgroup | net localgroup administrators)"; ;
            string parms = @build;
            string output = "";
            string error = string.Empty;

            ProcessStartInfo psi = new ProcessStartInfo("reg.exe", parms);

            psi.RedirectStandardOutput = true;
            psi.RedirectStandardError = true;
            psi.WindowStyle = System.Diagnostics.ProcessWindowStyle.Normal;
            psi.UseShellExecute = false;
            System.Diagnostics.Process reg;
            reg = System.Diagnostics.Process.Start(psi);
            using (System.IO.StreamReader myOutput = reg.StandardOutput)
            {
                String regFull = myOutput.ReadToEnd();
                String[] regOutputs = regFull.Split(' ');
                int arrylngth = regOutputs.Length;
                output = regOutputs[arrylngth-1];
            }
            using (System.IO.StreamReader myError = reg.StandardError)
            {
                error = myError.ReadToEnd().Trim();

            }

            return output;
            //Console.ReadLine();
        }




    }
}
