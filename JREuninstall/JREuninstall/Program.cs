using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Management;
using System.IO;

namespace JREuninstall
{
    class Program
    {
        static void Main(string[] args)
        {
            List<String> hostJREList = new List<string>();//create list object to contain of all JRE installed on host
            ObjectQuery query = new ObjectQuery("SELECT PackageName FROM Win32_Product WHERE PackageName LIKE 'jre%%'");//build query to ask host what JRE are installed
            ManagementObjectSearcher searcher = new ManagementObjectSearcher(query);//search remote host for JRE
            ManagementObjectCollection queryCollection = searcher.Get();//get results from search
            if (queryCollection.Count > 0)//if the host has any JRE installed
            {
                foreach (ManagementObject mo in queryCollection)//for each result in query
                {
                    if (mo["PackageName"].ToString().Contains("jre"))//if the packageName contains JRE write host and jre to log file and add JRE to list to be passed along for the removal of JRE's
                    {
                        String packageName = mo["PackageName"].ToString();
                        hostJREList.Add(packageName.ToString());
                    }
                }
                removeJRE(hostJREList);
                Console.ReadLine();
            }
        }
        static void removeJRE(List<String> hostJREList)
        {
            //loop through JRE versions and send uninstall command
            foreach (String jre in hostJREList)
            {
                if (!jre.Contains("jre1.7.0_21"))
                {
                    //SelectQuery query = new SelectQuery("Win32_Product", "packagename='"+jre+"'");

                    //EnumerationOptions enumOptions = new EnumerationOptions();
                    //enumOptions.ReturnImmediately = true;
                    //enumOptions.Rewindable = false;

                    //ManagementObjectSearcher searcher = new ManagementObjectSearcher(query);

                    //foreach (ManagementObject app in searcher.Get())
                    //{
                    //    ManagementBaseObject outParams = app.InvokeMethod("Uninstall");
                    //        //app.InvokeMethod("Uninstall", null);
                    //    Console.WriteLine("The Uninstall method result: {0}", outParams["ReturnValue"]);
                    //}
                    ManagementObjectSearcher mos = new ManagementObjectSearcher(
                        "SELECT * FROM Win32_Product WHERE PackageName = '" + jre + "'");
                    foreach (ManagementObject mo in mos.Get())
                    {
                        if (mo["PackageName"].ToString() == jre)
                        {
                            object hr = mo.InvokeMethod("Uninstall", null);
                            //return (bool)hr;
                        }
                    }
                }
            }
        }
    }
}
